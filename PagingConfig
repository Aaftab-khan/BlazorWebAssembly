using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace BlazorInDepthLearning.Configuration
{
    public class PagingConfig
    {
        public bool Enabaled { get; set; }
        public bool CustomPager { get; set; }
        public int PageSize { get; set; }

        public int NumberOfItemsToSkip(int pageNumber)
        {
            if (Enabaled)
            {
                return (pageNumber - 1) * PageSize;
            }
            return 0;
        }

        public int NumberOfItemsToTake(int totalItemsCount)
        {
            if (Enabaled)
            {
                return PageSize;
            }
            return totalItemsCount;
        }

        public int PrevPageNumber(int currentPageNumber)
        {

            if (currentPageNumber > 1)
            {
                return currentPageNumber - 1;
            }

            return 1;
        }

        public int NextPageNumber(int currentPageNumber,int totalItemsCount)
        {
            if (currentPageNumber<MaxPageNumber(totalItemsCount))
            {
                return currentPageNumber + 1;
            }
            return currentPageNumber;
        }

        public int MaxPageNumber(int TotalItemsCount)
        {
            int maxNumberOfPages;
            double NumberOfPages = (double)TotalItemsCount / (double)PageSize;

            if (NumberOfPages ==Math.Floor(NumberOfPages))
            {
                maxNumberOfPages = (int)NumberOfPages;
            }

            else
            {
                maxNumberOfPages = (int)NumberOfPages+1;
            }

            return maxNumberOfPages;
        }
    }
}
